---
import { Image } from 'astro:assets';
import { Icon } from "astro-icon";
import type { NavItem } from "~/types";
import exantaLogo from "~/assets/exanta_logo_text.svg"
import logo from "~/assets/exanta_logo.svg";

const currentPath = Astro.url.pathname;

const navItems: Array<NavItem> = [
  { title: "About", url: "/about" },
  { title: "Services", url: currentPath == "/" ? "#services" : "#" },
  { title: "News", url: currentPath == "/" ? "#featured-news" : "#" },
  { title: "Contact", url: "/contact" },
];

---

<header
  id="page-header"
  class:list={[currentPath === "/" ? "bottom-0" : "top-0", "absolute z-20 flex w-full items-center justify-between border-b border-transparent px-8 py-4 text-slate-200"]}
>
  <a class="flex items-center gap-3 hover:!text-default" href="/">
    <h1 class="sr-only">exanta</h1>
    <Image src={exantaLogo} alt="exanta logo" width="150" />
  </a>
  <div>
    <div class="flex items-center gap-6">
      <nav class="hidden sm:block">
        <ul class="flex items-center gap-6">
          {
            navItems.map(({ title, url }) => (
              <li>
                <a class="text-sm" href={url}>
                  {title}
                </a>
              </li>
            ))
          }
        </ul>
      </nav>
      <button
        id="open-nav-button"
        type="button"
        class="btn sm:hidden outline-0 outline-none focus:outline-none focus:outline-0 active:outline-none active:outline-0"
        aria-label="Navigation"
      >
        <Icon pack="mdi" name="menu" class="h-8" />
      </button>
    </div>
    <!-- mobile menu -->
    <div id="menu-modal" class="modal hidden" aria-hidden="true">
      <div class="fixed inset-0 bg-slate-900 px-8 py-4 text-default">
        <div class="space-y-4" role="dialog" aria-modal="true">
          <header class="text-right">
            <button
              id="close-nav-button"
              type="button"
              class="btn"
              aria-label="Close navigation"
            >
              <Icon pack="mdi" name="close" class="h-8" />
            </button>
          </header>
          <div class="flex justify-center">
            <Image src={logo} alt="exanta logo" class="h-16" />
          </div>
          <nav>
            <ul class="flex flex-col">
              {
                navItems.map(({ title, url }) => (
                  <li>
                    <a class="block py-4 text-center text-xl" href={url}>
                      {title}
                    </a>
                  </li>
                ))
              }
            </ul>
          </nav>
        </div>
      </div>
    </div>
  </div>
</header>

<script>
  import MicroModal from "micromodal";
  import invariant from "tiny-invariant";

  const menuModalId = "menu-modal";

  const header = document.querySelector("#page-header") as HTMLElement;
  const page = document.documentElement;
  const menu = document.querySelector(`#${menuModalId} ul`);
  const openNavButton = document.querySelector("#open-nav-button");
  const closeNavButton = document.querySelector("#close-nav-button");

  invariant(header, "header should not be null");
  invariant(menu, "menu should not be null");
  invariant(openNavButton, "openNavButton should not be null");
  invariant(closeNavButton, "closeNavButton should not be null");

  const openMenu = () => {
    MicroModal.show(menuModalId, { disableScroll: true });
  };

  const closeMenu = () => {
    MicroModal.close(menuModalId);
  };

  openNavButton.addEventListener("click", openMenu);
  closeNavButton.addEventListener("click", closeMenu);

  document.addEventListener("scroll", () => {
    const d = page.clientHeight - page.scrollTop - header.offsetHeight;
    header.classList.toggle("fixed-header", d < 0);
  });

  menu.addEventListener("click", (event) => {
    if ((event.target as HTMLElement).tagName === "A") {
      closeMenu();
    }
  });



</script>

<noscript>
  <style>
    #open-nav-button {
      display: none;
    }
  </style>
</noscript>

<style>
  .fixed-header {
    @apply fixed bottom-auto top-0;
    @apply border-default bg-slate-900 text-slate-200;
  }
  .modal.is-open {
    @apply block;
  }
</style>
